{\rtf1\ansi\ansicpg1254\deff0\nouicompat\deflang1055{\fonttbl{\f0\fnil\fcharset162 Calibri;}{\f1\fnil\fcharset238 Calibri;}{\f2\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 6.3.9600}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\b\f0\fs22 1. Algoritma nedir? Algoritman\f1\u305?\f0 n gereklili\f1\u287?\f0 ini ve avantajlar\f1\u305?\f0 n\f1\u305?\f0  a\f2\lang1033\'e7\f1\lang1055\u305?\f2\lang1033 klay\f1\lang1055\u305?\f2\lang1033 n\f1\lang1055\u305?\f2\lang1033 z.\b0\par
\f1  - Algoritma, belirli bir problemi \f2\'e7\'f6zmek veya belirli bir g\'f6revi ger\'e7ekle\f1\'batirmek i\f2\'e7in ad\f1\u305?m ad\u305?m bir dizi talimat\u305?n belirtildi\u287?i bir plan veya y\f2\'f6nergedir.\par
   - Algoritmalar, problem \'e7\'f6zme s\'fcrecini d\'fczenler, s\f1\u305?ralar, karma\'ba\u305?kl\u305?\u287?\u305? azalt\u305?r, hatalar\u305? en aza indirir ve i\'balemi daha etkili hale getirir.\par
   - Algoritmalar\u305?n avantajlar\u305? \'baunlar olabilir:\par
     - Hata azaltma: \u304?yi bir algoritma, hatalar\u305? azalt\u305?r ve daha d\f2\'fc\f1\'ba\f2\'fck hata oranlar\f1\u305?na sahip programlar olu\'baturman\u305?za yard\u305?mc\u305? olur.\par
     - Performans art\u305?\'ba\u305?: Algoritmalar i\'balemi daha h\u305?zl\u305? ve verimli hale getirir.\par
     - Karma\'ba\u305?kl\u305?\u287?\u305?n azalt\u305?lmas\u305?: Algoritmalar, karma\'ba\u305?kl\u305?\u287?\u305? azaltarak problem \f2\'e7\'f6zme s\'fcrecini daha y\'f6netilebilir hale getirir.\par
     - Mant\f1\u305?kl\u305? d\f2\'fc\f1\'ba\f2\'fcnme: Algoritmalar\f1\u305?n olu\'baturulmas\u305?, mant\u305?k y\f2\'fcr\'fctme yeteneklerinizi geli\f1\'batirir.\par
     - \u304?\'babirli\u287?i: Algoritmalar, bir\f2\'e7ok ki\f1\'bainin ayn\u305? problem \f2\'fczerinde \'e7al\f1\u305?\'bamas\u305?n\u305? kolayla\'bat\u305?r\u305?r.\par
\f2\par
\b 2. Program yaz\f1\u305?lmadan \f2\'f6nce algoritmas\f1\u305? m\lang1055\u305?\lang1033  haz\lang1055\u305?\f0 r\f1\lang1033 lanmal\lang1055\u305?\lang1033  yoksa ak\u305?\'ba diyagram\u305? m\lang1055\u305?\lang1033  \f0\lang1055\'e7\f1\lang1033 izilmelidir?\par
\b0 - Herhangi bir program yaz\u305?lmadan \f2\'f6nce bir algoritma haz\f1\u305?rlanmal\u305?d\u305?r. Algoritma, problemin nas\u305?l \f2\'e7\'f6z\'fclece\f1\u287?ini belirler ve i\'balem s\u305?ras\u305?n\u305? ad\u305?m ad\u305?m a\f2\'e7\f1\u305?klar. Bu algoritma daha sonra bir program\u305?n temelini olu\'baturur. Ak\u305?\'ba diyagram\u305?, algoritman\u305?n g\f2\'f6rsel bir temsili olarak kullan\f1\u305?labilir, ancak her zaman \f2\'f6nce algoritma belirlemek \'f6nemlidir.\par
\b\f1\par
3. Algoritma haz\lang1055\u305?\lang1033 rlan\lang1055\u305?\lang1033 rken dikkat edilmesi gereken hususlar\u305? a\f2\'e7\f1\lang1055\u305?\f2\lang1033 klay\f1\lang1055\u305?\f2\lang1033 n\f1\lang1055\u305?\f2\lang1033 z.\par
\b0\f0\lang1055    \f1\lang1033 - Algoritman\u305?n anla\'ba\u305?labilir olmas\u305?.\par
   - Ad\u305?mlar\u305?n mant\u305?kl\u305? ve s\u305?ral\u305? olmas\u305?.\par
   - Her ad\u305?m\u305?n a\f2\'e7\f1\u305?k ve belirgin olmas\u305?.\par
   - D\f2\'f6ng\'fclerin ve \f1\'baartl\u305? ifadelerin do\u287?ru kullan\u305?lmas\u305?.\par
   - Ad\u305?mlar\u305?n tekrar kullan\u305?labilirli\u287?ini ve genel ge\f2\'e7erli\f1\u287?i g\f2\'f6zetmesi.\par
   - Performans iyile\f1\'batirmeleri i\f2\'e7in optimizasyon olanaklar\f1\u305?n\u305?n g\f2\'f6z \'f6n\'fcnde bulundurulmas\f1\u305?.\par
\b\f2\par
4. Degi\f1\lang1055\'ba\f2\lang1033 ken nedir? Programlarda neden degi\f1\lang1055\'ba\f2\lang1033 ken\f0\lang1055 l\f2\lang1033 ere ihtiya\'e7 duyulmaktad\f1\lang1055\u305?\f2\lang1033 r?\par
\b0\f1    - De\u287?i\'baken, bir programda bilgi saklamak i\f2\'e7in kullan\f1\u305?lan bir veri yap\u305?s\u305?d\u305?r. Bir de\u287?i\'baken, bilgiyi depolamak, i\'balemek ve de\u287?i\'batirmek i\f2\'e7in kullan\f1\u305?l\u305?r.\par
   - Programlarda de\u287?i\'bakenlere ihtiya\f2\'e7 duyulur \'e7\'fcnk\'fc:\par
     - Ge\'e7ici veri depolamak i\'e7in kullan\f1\u305?l\u305?rlar.\par
     - Hesaplamalarda kullan\u305?l\u305?r.\par
     - Veriyi kullan\u305?c\u305?dan almak veya kullan\u305?c\u305?ya sunmak i\f2\'e7in kullan\f1\u305?l\u305?r.\par
     - Veriyi saklamak ve i\'balemek i\f2\'e7in gereklidirler.\par
\par
\b 5. Saya\'e7lar, nerelerde ve ni\f0\lang1055\'e7\f2\lang1033 in kullan\f1\lang1055\u305?\f2\lang1033 lmaktad\f1\lang1055\u305?\f2\lang1033 r?\b0\par
\f0\lang1055   \f1\lang1033  - Saya\f2\'e7lar, genellikle d\'f6ng\'fclerde veya tekrarl\f1\u305? i\'balemlerde kullan\u305?l\u305?r.\par
 \f0\lang1055  \f1\lang1033  - Bir saya\f2\'e7, belirli bir \f1\'baeyin ka\f2\'e7 kez tekrarland\f1\u305?\u287?\u305?n\u305? veya belirli bir ko\'baulu ka\f2\'e7 kez sa\f1\u287?lad\u305?\u287?\u305?n\u305?z\u305? takip etmek i\f2\'e7in kullan\f1\u305?l\u305?r.\par
   - Saya\f2\'e7lar, d\'f6ng\'fclerin s\f1\u305?n\u305?rlar\u305?n\u305? belirlemek ve kontrol etmek i\f2\'e7in kullan\f1\u305?l\u305?r.\par
\b\f2\par
6.\f0\lang1055  \f2\lang1033 A\f1\lang1055\'ba\f2\lang1033 ag\f1\lang1055\u305?\f2\lang1033 daki algoritman\f1\lang1055\u305?\f2\lang1033 n sonucu nedir?\par
\b0\f0\lang1055   \f2\lang1033 1. Basla\par
\f0\lang1055   \f2\lang1033 2. T-0\par
\f0\lang1055   \f2\lang1033 3. S-0\par
\f0\lang1055   \f2\lang1033 4. Eger S>10 ise Git 8\par
\f0\lang1055   \f2\lang1033 5.T=T+2*S\par
\f0\lang1055   \f2\lang1033 6. S=S+2\par
\f0\lang1055   \f2\lang1033 7. Git 4\par
\f0\lang1055   \f2\lang1033 8. yaz T\par
\f0\lang1055   \f2\lang1033 9. dur\par
\f1 - Bu algoritman\u305?n sonucu \'bau \'baekildedir:\par
     - T ba\'balang\u305?\f2\'e7ta 0 olarak ba\f1\'balar.\par
     - S ba\'balang\u305?\f2\'e7ta 0 olarak ba\f1\'balar.\par
     - S'nin de\u287?eri 10'dan b\f2\'fcy\'fck oldu\f1\u287?u s\f2\'fcrece, T'yi (T = T + 2 * S) art\f1\u305?r ve S'yi (S = S + 2) art\u305?r.\par
     - S 10'dan b\f2\'fcy\'fck oldu\f1\u287?unda T'yi yaz ve program\u305? durdur.\par
\f2\par
\b\f0\lang1055 7. A\f1\'ba\f0 a\f1\u287?\u305?\f0 daki algoritman\f1\u305?\f0 n sonucunu hesaplay\f1\u305?\f0 n\f1\u305?\f0 z?\b0\par
  1. Basla\par
  2. F=1\par
  3. S=20\par
  4. Eger S<1 ise Git 9\par
  5. S= S-3\par
  6. F= F+S\par
  7. F= F+2\par
  8. Git 4\par
  9. Yaz F\par
  10. Dur\par
\f1\lang1033\par
     - F ba\'balang\u305?\f2\'e7ta 1 olarak ba\f1\'balar.\par
     - S ba\'balang\u305?\f2\'e7ta 20 olarak ba\f1\'balar.\par
     - S, 1'den k\f2\'fc\'e7\'fck olana kadar S'yi 3 azalt ve F'yi (F = F + S) art\f1\u305?r.\par
     - F'yi bir daha 2 art\u305?r.\par
     - Sonu\f2\'e7 olarak F de\f1\u287?eri yaz\u305?l\u305?r ve program durur.\par
\f0\lang1055\par
\b 8. Girilen \f2\lang1033\'fc\'e7 sayidan en b\f0\lang1055\'fc\f2\lang1033 y\f0\lang1055\'fc\f2\lang1033 g\f0\lang1055\'fc\f2\lang1033 n\'fc bulan program\f1\lang1055\u305?\f2\lang1033 n algoritmas\f1\lang1055\u305?\f0 n\f1\u305?\f2\lang1033  haz\f1\lang1055\u305?\f2\lang1033 rlay\f1\lang1055\u305?\f2\lang1033 n\f1\lang1055\u305?\f2\lang1033 z.\b0\par
\f0\lang1055    \f1\lang1033 1. Ba\'bala\par
  \f0\lang1055  \f1\lang1033 2. Say\u305?lar\u305? A, B ve C olarak al\par
  \f0\lang1055  \f1\lang1033 3. E\u287?er A > B ise\par
        1. E\u287?er A > C ise\par
            1. En B\f2\'fcy\'fck = A\par
        2. De\f1\u287?ilse\par
            1. En B\f2\'fcy\'fck = C\par
  \f0\lang1055  \f2\lang1033 4. De\f1\u287?ilse\par
        1. E\u287?er B > C ise\par
            1. En B\f2\'fcy\'fck = B\par
        2. De\f1\u287?ilse\par
            1. En B\f2\'fcy\'fck = C\par
   5. En B\'fcy\'fck'\'fc yazd\f1\u305?r\par
   6. Dur\par
\f2\par
\b 9. Girilen \'fc\'e7 say\f1\lang1055\u305?\f2\lang1033 y\f1\lang1055\u305?\f2\lang1033  k\'fc\f0\lang1055\'e7\f2\lang1033\'fckten b\'fcy\'fcge dogru s\f1\lang1055\u305?\f2\lang1033 ralayan program\f1\lang1055\u305?\f2\lang1033 n algoritmas\f1\lang1055\u305?\f2\lang1033 n\f1\lang1055\u305?\f2\lang1033  haz\f1\lang1055\u305?\f2\lang1033 rlay\f1\u305?n\u305?z\b0\par
   1. Ba\'bala\par
   2. Say\u305?lar\u305? A, B ve C olarak al\par
   3. E\u287?er A <= B ve A <= C ise\par
        1. E\u287?er B <= C ise\par
            1. S\u305?ral\u305? = A, B, C\par
        2. De\u287?ilse\par
            1. S\u305?ral\u305? = A, C, B\par
   4. De\u287?ilse\par
        1. E\u287?er B <= A ve B <= C ise\par
            1. E\u287?er\f0\lang1055  \f1\lang1033  A <= C ise\par
                1. S\u305?ral\u305? = B, A, C\par
\b\par
10. 1-99 aras\lang1055\u305?\lang1033 ndak\lang1055\u305?\lang1033  tek ve \f0\lang1055\'e7\f1\lang1033 ift say\lang1055\u305?\lang1033 lar\lang1055\u305?\lang1033 n toplamla\f0\lang1055 r\f1\u305?\lang1033  ile \f2\'e7arp\f1\lang1055\u305?\f2\lang1033 m\f0\lang1055 l\f2\lang1033 ar\f1\lang1055\u305?\f2\lang1033 n\f1\lang1055\u305?\f2\lang1033  ay\f0\lang1055 r\f1\u305?\f2\lang1033  ay\f0\lang1055 r\f1\u305?\f2\lang1033  hesaplayan\f0\lang1055  \f2\lang1033 program\f1\lang1055\u305?\f2\lang1033 n algoritmas\f1\lang1055\u305?\f0 n\f1\u305?\f2\lang1033  haz\f1\lang1055\u305?\f2\lang1033 rlay\f1\lang1055\u305?\f2\lang1033 n\f1\lang1055\u305?\f2\lang1033 z.\par
\b0\f1 1. Ba\'bala\par
2. Toplam = 0\par
3. \f2\'c7arp\f1\u305?m = 1\par
 4. \u304? sayac\u305? 1'den 99'a kadar art\u305?r\par
     1. E\u287?er \u304? \f2\'e7ift say\f1\u305? ise\par
            1. Toplam = Toplam + \u304?\par
            2. \f2\'c7arp\f1\u305?m = \f2\'c7arp\f1\u305?m * \u304?\par
 5. Toplam ve \f2\'c7arp\f1\u305?m\u305? yazd\u305?r\par
 6. Dur\f2\par
\f1\par
\par
\f2\par
\f1\par
\par
\par
\par
    \f0\lang1055\par
}
 